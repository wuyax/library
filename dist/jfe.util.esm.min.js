/**
  * jflib V1.0.0
  * (c) 2018-2019
  * Copyright all contributors
  * Released under MIT license.
  */function arrShuffle(a){for(var b=a.slice(0),c=0;c<b.length;c++){var d=getRandomInt(0,c),e=b[c];b[c]=b[d],b[d]=e}return b}function getRandomInt(a,b){return Math.floor(Math.random()*(b-a+1)+a)}var arrShuffle_1=arrShuffle;function arrayConcat(){return[].concat.apply([],arguments)}var arrayConcat_1=arrayConcat;function arrayMaxOrMin(a,b){var c=[];return a.forEach(function(a){isNaN(a)||c.push(a)}),'[object Array]'==Object.prototype.toString.call(c)&&Object.keys(c).length&&Math[b].apply(null,c)}var getArrayMaxOrMin=arrayMaxOrMin;function unique(a){for(var b=[],c=0;c<a.length;c++)-1==b.indexOf(a[c])&&b.push(a[c]);return b}var unique_1=unique,util={arrShuffle:arrShuffle_1,arrayConcat:arrayConcat_1,getArrayMaxOrMin:getArrayMaxOrMin,unique:unique_1},util_1=util.arrShuffle,util_2=util.arrayConcat,util_3=util.getArrayMaxOrMin,util_4=util.unique;export{util_1 as arrShuffle,util_2 as arrayConcat,util_3 as getArrayMaxOrMin,util_4 as unique};export default util;
